/* 
Cleaning Data in SQL Queries
*/

SELECT *
FROM PortfolioProject.dbo.nashville_housing
----------------------------
--Standardise Date Format

/*UPDATE PortfolioProject.dbo.nashville_housing
SET saledate=0
WHERE saledate IS NULL

SELECT saledate, cast(saledate as date)
FROM PortfolioProject.dbo.nashville_housing*/

SELECT saledate, CAST(saledate AS DATE)
FROM PortfolioProject.dbo.nashville_housing
WHERE ISDATE(saledate) = 1

--Populate property address

SELECT *
FROM PortfolioProject.dbo.nashville_housing
--WHERE PropertyAddress IS NULL
ORDER BY ParcelID

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject.dbo.nashville_housing a
JOIN PortfolioProject.dbo.nashville_housing b
    ON a.ParcelID = b.ParcelID
    AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress IS NULL

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject.dbo.nashville_housing a
JOIN PortfolioProject.dbo.nashville_housing b
    ON a.ParcelID = b.ParcelID
    AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress IS NULL

--Breaking the property address into individual columns (Address, City, State)

SELECT PropertyAddress
FROM PortfolioProject.dbo.nashville_housing
--WHERE PropertyAddress IS NULL
--ORDER BY ParcelID

SELECT
PARSENAME(REPLACE(PropertyAddress, ',', '.'), 2)
, PARSENAME(REPLACE(PropertyAddress, ',', '.'), 1)
FROM PortfolioProject.dbo.nashville_housing


ALTER TABLE nashville_housing
ADD property_split_address NVARCHAR(255);

UPDATE nashville_housing
SET property_split_address = PARSENAME(REPLACE(PropertyAddress, ',', '.'), 2)

ALTER TABLE nashville_housing
ADD property_split_city NVARCHAR(255);

UPDATE nashville_housing
SET property_split_city = PARSENAME(REPLACE(PropertyAddress, ',', '.'), 1)


--Breaking the owner address into individual columns (Address, City, State)

SELECT
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)
, PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)
, PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)
FROM PortfolioProject.dbo.nashville_housing

ALTER TABLE nashville_housing
ADD owner_split_address NVARCHAR(255);

UPDATE nashville_housing
SET owner_split_address = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)

ALTER TABLE nashville_housing
ADD owner_split_city NVARCHAR(255);

UPDATE nashville_housing
SET owner_split_city = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)

ALTER TABLE nashville_housing
ADD owner_split_state NVARCHAR(255);

UPDATE nashville_housing
SET owner_split_state = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)

--Change Y and N to Yes and No in "Sold as Vacant" field

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM PortfolioProject.dbo.nashville_housing
GROUP BY SoldAsVacant
ORDER BY 2

SELECT SoldAsVacant
    , CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
    WHEN SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant
    END
FROM PortfolioProject.dbo.nashville_housing
 
UPDATE nashville_housing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
    WHEN SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant
    END

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM PortfolioProject.dbo.nashville_housing
GROUP BY SoldAsVacant
ORDER BY 2

--Removing duplicates

WITH row_num_cte AS (
SELECT *, 
    ROW_NUMBER() OVER (
    PARTITION BY ParcelID,
                PropertyAddress,
                SalePrice,
                SaleDate,
                LegalReference
                ORDER BY UniqueID
                ) AS row_num
FROM PortfolioProject.dbo.nashville_housing
)
DELETE
FROM row_num_cte
WHERE row_num > 1
--ORDER BY PropertyAddress

DELETE
FROM PortfolioProject.dbo.nashville_housing
WHERE SoldAsVacant <> 'Yes' 
    AND SoldAsVacant <> 'No' 

--Delete unused columns

SELECT *
FROM PortfolioProject.dbo.nashville_housing

ALTER TABLE PortfolioProject.dbo.nashville_housing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE PortfolioProject.dbo.nashville_housing
DROP COLUMN SaleDate
